import string

"""
A few methods that deciphers a text encrypted with Vigenere Cipher. Key needed
Author: Angela Yang
Date: 1/9/2023
"""

"""
Reads a cipher text and deciphers it into plain text.
"""


def decipherVigenere(filename):
    key, text = transcript(filename)
    return decipher(key, text)


"""
Reads a plain text and encrypts it into cipher text.
"""


def encryptVigenere(filename):
    key, text = transcript(filename)
    return encrypt(key, text)


"""
Reads the file, transfers it into a string and filters it to contain no new lines and only capitalized characters.
Retrieves the key from the beginning of the text file.
Returns a list containing the key and the text.
Reads a string.
"""


def transcript(filename):
    with open(filename, 'r') as file:
        text = file.read().replace('\n', '')
    # the first word separated by comma is the key
    key = text.split(",")[0].upper()
    text = ''.join(text.split(",")[1:])
    return [key, ''.join(i.upper() for i in text if i.isalpha())]


"""
Creates a correct list of alphabets generated by the key.
Reads a string.
"""


def alphabets(key):
    collection = []
    for i in key:
        collection.append(shift(ord(i) - ord('A')))
    return collection


"""
Returns a list of shifted alphabet by a certain number.
Reads an int.
"""


def shift(n):
    # creates an alphabet with uppercase letters
    normal = list(string.ascii_uppercase)
    newAlphabet = normal[n:]
    newAlphabet.extend(normal[0:n])
    return newAlphabet


"""
Deciphers the text and returns a string of plain text.
Reads two strings.
"""


def decipher(key, text):
    # receives the list of available ciphers
    ciphers = alphabets(key)
    message = []
    # for each word, deciphers it by the correct key
    for i in range(len(text)):
        # divides it by key length to find the right alphabet
        character = chr(65 + ciphers[i % len(key)].index(text[i]))
        message.append(character)
    return ''.join(message)


"""
Encrypts the text and returns a string of cipher text.
Reads two strings.
"""


def encrypt(key, text):
    # receives the list of available ciphers
    ciphers = alphabets(key)
    message = []
    # for each word, encrypts it by the correct key
    for i in range(len(text)):
        # divides it by key length to find the right alphabet
        character = ciphers[i % len(key)][ord(text[i]) - 65]
        message.append(character)
    return ''.join(message)


"""
Test Run
"""

# # transcript
# print(transcript("vigenere.txt"))

# # shift
# print(shift(3))

# # alphabet
# print(alphabets('TOY'))

# # decipher
# print(decipher("TOY", "MCGGTGGWRROLWPCRCLW"))

# # decipherVigenere
# print(decipherVigenere("vigenere.txt"))

open("answer.txt", "w").write(decipherVigenere("vigenere.txt"))
open("answer cipher.txt", "w").write(encryptVigenere("vigenere.txt"))
